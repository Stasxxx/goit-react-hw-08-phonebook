{"version":3,"file":"static/js/854.1932ea1b.chunk.js","mappings":"6QAIaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,kEAKTE,EAAYF,EAAAA,GAAAA,IAAH,sFAMTG,EAAQH,EAAAA,GAAAA,MAAH,gSAeLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+bAqBLM,EAAMN,EAAAA,GAAAA,IAAH,oF,uCC3CVO,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,QACjB,yHACA,kHACAC,SAAS,0BACXC,MAAML,EAAAA,KAAaI,SAAS,0BAC5BE,SAAUN,EAAAA,KAAaO,IAAI,GAAGC,IAAI,IAAIJ,SAAS,4BAGtCK,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACI,SAAC,KAAD,CAAQC,cAAe,CAAEV,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAAMO,iBAAkBd,EAAQe,SANnE,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAChCN,GAASO,EAAAA,EAAAA,IAASF,IAClBC,GACH,EAGG,UACI,UAAC,KAAD,YACI,UAACtB,EAAD,YACI,UAACC,EAAD,CAAOuB,QAAQ,WAAf,sBAEI,SAACtB,EAAD,CAAOuB,GAAG,WAAWC,KAAK,OAAOlB,KAAK,OAAOmB,YAAY,UACzD,SAAC,KAAD,CAAcnB,KAAK,aAEvB,UAACP,EAAD,CAAOuB,QAAQ,QAAf,mBAEI,SAACtB,EAAD,CAAOuB,GAAG,QAAQG,KAAK,QAAQpB,KAAK,QAAQmB,YAAY,WACxD,SAAC,KAAD,CAAcnB,KAAK,cAEvB,UAACP,EAAD,CAAOuB,QAAQ,WAAf,sBAEI,SAACtB,EAAD,CAAOuB,GAAG,WAAWG,KAAK,WAAWpB,KAAK,WAAWmB,YAAY,cACjE,SAAC,KAAD,CAAcnB,KAAK,oBAG3B,SAACJ,EAAD,WACI,SAACyB,EAAA,EAAD,WACI,SAAChC,EAAD,CAAW+B,KAAK,SAASE,QAAQ,YAAYC,MAAM,UAAUC,GAAI,CAACC,KAAM,WAAYC,SAAS,SAACC,EAAA,EAAD,IAA7F,8BAMvB,ECjDc,SAASC,IACpB,OACI,4BACI,SAACC,EAAA,EAAD,WACI,+CAEJ,SAACtB,EAAD,MAGX,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field } from \"formik\";\nimport Button from '@mui/material/Button';\n\nexport const ButtonMUI = styled(Button)`\n    width: 130px;\n    height: 30px;    \n`;\n\nexport const Container = styled.div`\nmargin-top: 110px;\ndisplay: flex;\njustify-content: center;\n`;\n\nexport const Label = styled.label`\n    display: block;\n    font-size: 20px;\n    line-height: 1.17;\n    letter-spacing: 0.01em;\n    color: #757575;\n    margin-bottom: 15px;\n    /* text-align: center; */\n    cursor: pointer;\n    \n    &:not(:last-child) {\n        margin-right: 20px;\n    }\n`;\n\nexport const Input = styled(Field)`\n    width: 300px;\n    height: 30px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    box-sizing: border-box;\n    border-radius: 4px;\n    padding-left: 15px;\n    outline: none;\n    transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    margin-left: 10px;\n    &:hover,\n    &:focus {\n        border: 1px solid #2196F3;\n    }\n\n    &:hover+.form-icon,\n    &:focus+.form-icon {\n        fill: #2196F3;\n    }\n`;\n\nexport const Div = styled.div`\nmargin-top:50px;\ndisplay: flex;\njustify-content: center;\n`","import { Formik, Form, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport { ButtonMUI, Label, Input, Container, Div } from \"./RegisterForm.styled\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport SendIcon from '@mui/icons-material/Send';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces without spaces at the beginning and end of the name'\n    ).required(\"This field is required\"),\n    email:yup.string().required(\"This field is required\"),\n    password: yup.string().min(6).max(16).required(\"This field is required\"),\n});\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmitForm = (values, { resetForm }) => {\n        dispatch(register(values));\n        resetForm();\n    }\n\n    return (\n        <Formik initialValues={{ name: '', email: '', password: '' }} validationSchema={schema} onSubmit={handleSubmitForm}>\n            <Form>\n                <Container>\n                    <Label htmlFor=\"username\">\n                        Username\n                        <Input id=\"username\" tape=\"text\" name=\"name\" placeholder=\"name\" />\n                        <ErrorMessage name=\"name\" />\n                    </Label>\n                    <Label htmlFor=\"email\">\n                        Email\n                        <Input id=\"email\" type=\"email\" name=\"email\" placeholder=\"email\" />\n                        <ErrorMessage name=\"email\" />\n                    </Label>\n                    <Label htmlFor=\"password\" >\n                        Password\n                        <Input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" />\n                        <ErrorMessage name=\"password\" />\n                    </Label>\n                </Container>\n                <Div>\n                    <Tooltip >\n                        <ButtonMUI type=\"submit\" variant=\"contained\" color=\"primary\" sx={{font: 'inherit'}} endIcon={<SendIcon />}>Register</ButtonMUI>\n                    </Tooltip>\n                </Div>\n            </Form>\n        </Formik>\n    );\n};","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\n\nexport default function Register() {\n    return (\n        <div>\n            <Helmet>\n                <title>Registration</title>\n            </Helmet>\n            <RegisterForm/>\n        </div>\n    )\n};"],"names":["ButtonMUI","styled","Button","Container","Label","Input","Field","Div","schema","yup","shape","name","matches","required","email","password","min","max","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","register","htmlFor","id","tape","placeholder","type","Tooltip","variant","color","sx","font","endIcon","Send","Register","Helmet"],"sourceRoot":""}